- name: Deploy application using Docker
  hosts: webservers
  become: true
  vars_files:
    - vars.yml

  tasks:
    - name: Clean up package cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
        force: yes

    - name: Remove conflicting containerd package
      apt:
        name: containerd
        state: absent
        purge: yes

    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Ensure Docker group exists
      group:
        name: docker
        state: present

    - name: Add user to Docker group
      user:
        name: "{{ ansible_ssh_user }}"
        groups: docker
        append: yes

    - name: Ensure Docker is running
      service:
        name: docker
        state: started
        enabled: yes

    - name: Set permissions on Docker socket
      file:
        path: /var/run/docker.sock
        owner: root
        group: docker
        mode: '0660'

    - name: Log in to DockerHub
      docker_login:
        username: "{{ lookup('env', 'DOCKERHUB_USERNAME') }}"
        password: "{{ lookup('env', 'DOCKERHUB_PASSWORD') }}"

    - name: Pull Docker image from DockerHub
      docker_image:
        name: ahmedshams8/my-app
        tag: latest  # Update this if a different tag is used
        source: pull

    - name: Run Docker container
      docker_container:
        name: myapp_container
        image: ahmedshams8/my-app:latest  # Update this if a different tag is used
        state: started
        ports:
          - "80:3000"
